sigclust2::shcutree(shc_result)
?shcutree
sigclust2::shcutree(shc_result$idx_hc)
shc_result$idx_hc
sigclust2::diagnostic(shc_result)
fviz_dend(plot_cluster,
cex = 0.8,
k = 3,
palette = "jco",
rect = T,
color_labels_by_k = TRUE,
main = "Ward Hierarchical clustering of TW-FA maps among middle-aged adults"
)
fviz_dend(plot_cluster,
cex = 0.8,
k = 5,
palette = "jco",
rect = T,
color_labels_by_k = TRUE,
main = "Ward Hierarchical clustering of TW-FA maps among middle-aged adults"
)
broom::augment(gam_tmp) %>% as.data.frame() %>% dplyr::select(.fitted)
peak <- broom::augment(gam_tmp) %>% as.data.frame()
View(peak)
peak <- broom::glance(gam_tmp) %>% as.data.frame()
View(peak)
peak <- broom::tidy(gam_tmp) %>% as.data.frame()
View(peak)
library(mgcv)
library(broom)
# Get the fitted values from the nonlinear trajectory between age and TW-FA of each bundle
data_fitted = list()
data_pvalue = list()
for (i in 1:ncol(datamat)){
# Load the tract TW-FA values
tmp <- datamat[,i] %>% as.data.frame()
colnames(tmp) <- colnames(datamat)[i]
print(colnames(tmp)) # Make sure the loop is working as expected
# Fit the GAM model
data_gam <- cbind(age = demographics$Age_Cog, tmp)
gam_tmp <- mgcv::gam(data_gam[,2]~s(age), data = data_gam)
# Store the fitted values
data_fitted[[i]] <- broom::augment(gam_tmp) %>% as.data.frame() %>% dplyr::select(.fitted)
data_pvalue[[i]] <- broom::tidy(gam_tmp) %>% as.data.frame() %>% dplyr::select(p.value)
}
data_fitted_for_clustering <- as.data.frame(do.call(cbind, data_fitted))
colnames(data_fitted_for_clustering) <- tracklist$trackname
data_pvalue_unlisted <- as.data.frame(do.call(cbind, data_pvalue))
colnames(data_fitted_for_clustering) <- tracklist$trackname
View(data_pvalue_unlisted)
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
colnames(data_fitted_for_clustering) <- tracklist$trackname
rownames(data_fitted_for_clustering) <- tracklist$trackname
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
rownames(data_fitted_for_clustering) <- tracklist$trackname
View(data_pvalue_unlisted)
data_fitted_for_clustering <- as.data.frame(do.call(cbind, data_fitted))
colnames(data_fitted_for_clustering) <- tracklist$trackname
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
rownames(data_pvalue_unlisted) <- tracklist$trackname
View(data_pvalue_unlisted)
p.adjust(data_pvalue_unlisted[,1], method = "fdr")
p.adjust(data_pvalue_unlisted[,1], method = "none")
p.adjust(data_pvalue_unlisted %>% arrange(p.value)[,1], method = "none")
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
rownames(data_pvalue_unlisted) <- tracklist$trackname
p.adjust(data_pvalue_unlisted %>% arrange(p.value)[,1], method = "none")
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "none")
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "fdr")
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "holm")
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "bonferonni")
# Check significant bundles
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(CC_1~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
# Check significant bundles
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(CC_1~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(MLF_right~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(MLF_left~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_left~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_right~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_right~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(SLFIII_right~s(age), data = data_gam)
summary(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_left~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(SLFIII_right~s(age), data = data_gam)
gam_tmp <- mgcv::gam(SLF_III_right~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(ILF_left~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(CST_right~s(age), data = data_gam)
summary(gam_tmp)
gratia::draw(gam_tmp)
library(tidyverse)
library(rio)
library(stringr)
rm(list=ls())
read_txt <- function(filename, var_name) {
file <- rio::import(filename)
file2 <<- rbind(colnames(file), file)
colnames(file2) <<- var_name
}
# DATA WRANGLING ----------------------------------------------------------
setwd("E:/STATS/TW_age")
read_txt("E:/DWI/Track_weighted_imaging/output/Tracts/subjList.txt", "subjname")
subjlist <-  file2 %>% mutate(subjname = str_remove(subjname, "sub-"))
read_txt("E:/DWI/Track_weighted_imaging/output/Tracts/TractOrder_concat.txt", "trackname")
tracklist <-  file2 %>% mutate(trackname = str_remove(trackname, ".//"))
rm(file2)
datamat <- rio::import("E:/DWI/Track_weighted_imaging/output/Tracts/155sub_72Tracts_TW_FA_Gaussian70.csv") %>%
mutate(across(everything(), ~replace(.x, is.nan(.x), 0)))
colnames(datamat) <- tracklist$trackname
rownames(datamat) <- subjlist$subjname
demographics <- rio::import("E:/STATS/PLSC/1_generate_disc_repl/output/R/AGE_COG_data_155Subj.csv")
# Confounds
confounds <- rio::import("E:/STATS/PLSC/2_Analysis/data/COG_data.mat")$load_COG$COG_full
confounds_df <- do.call(cbind, confounds$data)[,c(3:5, 14)] %>% as.data.frame()
colnames(confounds_df) <- c("handedness", "gender", "MMSE", "TIV")
library(mgcv)
library(broom)
library(broom)
# Get the fitted values from the nonlinear trajectory between age and TW-FA of each bundle
data_fitted = list()
data_pvalue = list()
for (i in 1:ncol(datamat)){
# Load the tract TW-FA values
tmp <- datamat[,i] %>% as.data.frame()
colnames(tmp) <- colnames(datamat)[i]
print(colnames(tmp)) # Make sure the loop is working as expected
# Fit the GAM model
data_gam <- cbind(age = demographics$Age_Cog, tmp) %>% scale() %>% as.data.frame()
gam_tmp <- mgcv::gam(data_gam[,2] ~ s(age? k = 4)
for (i in 1:ncol(datamat)){
# Load the tract TW-FA values
tmp <- datamat[,i] %>% as.data.frame()
colnames(tmp) <- colnames(datamat)[i]
print(colnames(tmp)) # Make sure the loop is working as expected
# Fit the GAM model
data_gam <- cbind(age = demographics$Age_Cog, tmp) %>% scale() %>% as.data.frame()
gam_tmp <- mgcv::gam(data_gam[,2] ~ s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
# Store the fitted values
data_fitted[[i]] <- broom::augment(gam_tmp) %>% as.data.frame() %>% dplyr::select(.fitted)
data_pvalue[[i]] <- broom::tidy(gam_tmp) %>% as.data.frame() %>% dplyr::select(p.value)
}
data_fitted_for_clustering <- as.data.frame(do.call(cbind, data_fitted))
data_fitted_for_clustering <- as.data.frame(do.call(cbind, data_fitted))
colnames(data_fitted_for_clustering) <- tracklist$trackname
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
rownames(data_pvalue_unlisted) <- tracklist$trackname
View(data_pvalue_unlisted)
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "fdr")
View(data_fitted_for_clustering)
# Check significant bundles
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(CC_1~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(MLF_right~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_left~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_right~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(ILF_left~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
View(data_fitted_for_clustering)
View(data_pvalue_unlisted)
gam_tmp <- mgcv::gam(SLF_III_right~s(age) + gender + TIV + handedness, data = cbind(data_gam, confounds_df))
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(SLF_III_right~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
# Check significant bundles
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(CC_1~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(MLF_right~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_left~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(FX_right~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(ILF_left~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, datamat)
gam_tmp <- mgcv::gam(SLF_III_right~s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
version
install.packages('ModelArray')
library(devtools)
devtools::install_github("PennLINC/ModelArray")
library(ModelArray)
library(tidyverse)
library(rio)
factorization_matrix <- rio::import('factorization_matrix.csv')
setwd("E:/STATS/TW_age")
factorization_matrix <- rio::import('factorization_matrix.csv')
demographics <- rio::import("E:/STATS/PLSC/1_generate_disc_repl/output/R/AGE_COG_data_155Subj.csv")
# Confounds
confounds <- rio::import("E:/STATS/PLSC/2_Analysis/data/COG_data.mat")$load_COG$COG_full
confounds_df <- do.call(cbind, confounds$data)[,c(3:5, 14)] %>% as.data.frame()
colnames(confounds_df) <- c("handedness", "gender", "MMSE", "TIV")
library(mgcv)
library(broom)
# Get the fitted values from the nonlinear trajectory between age and TW-FA of each bundle
data_fitted = list()
data_pvalue = list()
for (i in 1:ncol(factorization_matrix)){
# Load the tract TW-FA values
tmp <- factorization_matrix[,i] %>% as.data.frame()
colnames(tmp) <- colnames(factorization_matrix)[i]
print(colnames(tmp)) # Make sure the loop is working as expected
# Fit the GAM model
data_gam <- cbind(age = demographics$Age_Cog, tmp) %>% scale() %>% as.data.frame()
gam_tmp <- mgcv::gam(data_gam[,2] ~ s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
# Store the fitted values
data_fitted[[i]] <- broom::augment(gam_tmp) %>% as.data.frame() %>% dplyr::select(.fitted)
data_pvalue[[i]] <- broom::tidy(gam_tmp) %>% as.data.frame() %>% dplyr::select(p.value)
}
data_fitted_unlisted <- as.data.frame(do.call(cbind, data_fitted))
data_pvalue_unlisted <- as.data.frame(do.call(rbind, data_pvalue))
View(data_fitted_unlisted)
View(data_pvalue_unlisted)
# FDR correction
p.adjust((data_pvalue_unlisted %>% arrange(p.value))[,1], method = "fdr")
View(factorization_matrix)
gam_tmp <- mgcv::gam(factorization_matrix$V1 ~ s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
data_gam <- cbind(age = demographics$Age_Cog, tmp) %>% as.data.frame()
gam_tmp <- mgcv::gam(factorization_matrix$V1 ~ s(age, k = 4)
+ gender
+ TIV
+ handedness
+ MMSE,
data = cbind(data_gam, confounds_df),
method = 'REML')
summary(gam_tmp)
gratia::draw(gam_tmp)
library(tidyverse)
library(rio)
library(stringr)
require(preprocessCore)
require(ggpubr)
library(readxl)
rm(list = ls())
setwd("E:/Research_Projects/MiddleAge_LARA/STATS/1_Preliminary/analysis/")
demographics <- rio::import("E:/Research_Projects/MiddleAge_LARA/STATS/1_Preliminary/data_wrangling/AGE_COG_data_155Subj.csv") %>%
mutate(
ToT_Ratio_modified = 1 - ToT_Ratio,
Hotel_Task_modified = 1 - log(Hotel_Task)
)
# TIV
TIV <- read_excel("E:/Research_Projects/MiddleAge_LARA/DWI/participant_data_DTI.xlsx", sheet = "TIV", col_names = F)
colnames(TIV) <- "TIV"
data_middle_age <- cbind(demographics, TIV) %>% relocate(TIV, .after = MMSE)
# Figure A.2 ----
data_middle_age %>%
pivot_longer(
c(Cattell:Naming, Sentence_Comprehension_c:Hotel_Task_modified),
names_to = "Cognitive_assessment",
values_to = "performance"
) %>%
mutate(Cognitive_assessment = ifelse(Cognitive_assessment == "Verbal_Fluency", "Verbal Fluency",
ifelse(Cognitive_assessment == "Sentence_Comprehension_c", "Sentence Comp",
ifelse(Cognitive_assessment == "Story_Recall", "Story Recall",
ifelse(Cognitive_assessment == "ToT_Ratio_modified", "Tip-of-the-tongue",
ifelse(Cognitive_assessment == "Hotel_Task_modified", "Hotel Task",
Cognitive_assessment
)
)
)
)
)) %>%
group_by(Cognitive_assessment) %>%
# perform quantile normalization
mutate(performance = as.numeric(scale(normalize.quantiles(as.matrix(performance))))) %>%
ggplot(aes(Age_Cog, performance, color = Cognitive_assessment)) +
geom_hline(yintercept = 0, color = "red") +
geom_jitter(height = 0.05, alpha = 0.08) +
geom_smooth(linewidth = 2, method = "gam", formula = y ~ s(x, k = 3), alpha = .5) +
scale_x_continuous(breaks = seq(45, 60, 5)) +
coord_cartesian(ylim = c(-1, 1), xlim = c(45, 60)) + # Specify the age range for the study
scale_color_brewer(palette = "Paired") +
theme_pubr(
base_size = 20,
legend = "none"
) +
theme(
plot.title.position = "plot",
strip.background = element_blank(),
strip.placement = "outside",
axis.title.x = element_blank()
) +
labs(y = "Normalized score") +
facet_wrap(~Cognitive_assessment, scale = "free", ncol = 4)
# DATA ANALYSIS ----
summary(lm(age~gender_code, data = data_middle_age)) # No difference in mean age across genders
summary(lm(TIV~gender_code + age + MMSE + hand, data = data_middle_age)) # Male (-0.5) TIV higher than Female's (0.5)
summary(lm(MMSE~gender_code + age + TIV + hand, data = data_middle_age)) # Female have better overall cognition across genders
summary(lm(hand~gender_code + age + TIV + MMSE, data = data_middle_age)) # No difference in handedness across genders
p.adjust(c('0.526', '2e-16', '0.00836', '0.369'), method = 'fdr')
# DATA ANALYSIS ----
summary(lm(age~gender_code, data = data_middle_age)) # No difference in mean age across genders
summary(lm(TIV~gender_code + age + MMSE + hand, data = data_middle_age)) # Male (-0.5) TIV higher than Female's (0.5)
summary(lm(MMSE~gender_code + age + TIV + hand, data = data_middle_age)) # Female have better overall cognition across genders
summary(lm(hand~gender_code + age + TIV + MMSE, data = data_middle_age)) # No difference in handedness across genders
p.adjust(c('0.526', '2e-16', '0.00836', '0.369'), method = 'fdr')
library(ggpubr)
# DATA ANALYSIS ----
summary(lm(age~gender_code, data = data_middle_age)) # No difference in mean age across genders
summary(lm(TIV~gender_code + age + MMSE + hand, data = data_middle_age)) # Male (-0.5) TIV higher than Female's (0.5)
summary(lm(MMSE~gender_code + age + TIV + hand, data = data_middle_age)) # Female have better overall cognition across genders
summary(lm(hand~gender_code + age + TIV + MMSE, data = data_middle_age)) # No difference in handedness across genders
p.adjust(c('0.526', '2e-16', '0.00836', '0.369'), method = 'fdr')
density_data <- data_middle_age %>% pivot_longer(., cols = c("age", "Age_Cog"), names_to = "age_type")
ggplot(density_data, aes(value, color = age_type)) +
geom_density(fill = "#FDB863", alpha = .75, kernel = "epanechnikov", linewidth = 1.25, linetype = 1) +
theme_pubclean(base_size = 18) +
labs(x = "Age", y = "Density") +
ggtitle("Density Plot of Age")
ggplot(data_middle_age, aes(x = as.factor(gender_code), y = age)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
geom_violin(aes(fill = as.factor(gender_code)), trim = FALSE) +
geom_boxplot(width = 0.2)+
scale_y_continuous(breaks = seq(45, 60, 3)) +
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
theme_pubr(base_size = 16, legend = "none")
ggplot(density_data, aes(value, color = age_type)) +
geom_density(fill = "#FDB863", alpha = .75, kernel = "epanechnikov", linewidth = 1.25, linetype = 1) +
theme_pubclean(base_size = 18) +
labs(x = "Age", y = "Density") +
ggtitle("Density Plot of Age")
# Figure A.1 ----
ggplot(density_data, aes(value, color = age_type)) +
geom_density(fill = "#FDB863", alpha = .75, kernel = "epanechnikov", linewidth = 1.25, linetype = 1) +
theme_pubclean(base_size = 18) +
labs(x = "Age", y = "Density") +
ggtitle("Density Plot of Age")
ggplot(data_middle_age, aes(x = as.factor(gender_code), y = age)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
geom_violin(aes(fill = as.factor(gender_code)), trim = FALSE) +
geom_boxplot(width = 0.2)+
scale_y_continuous(breaks = seq(45, 60, 3)) +
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
theme_pubr(base_size = 16, legend = "none")
ggplot(data_middle_age, aes(x = as.factor(gender_code), y = MMSE)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
geom_violin(aes(fill = as.factor(gender_code)), trim = FALSE) +
geom_boxplot(width = 0.2)+
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
theme_pubr(base_size = 16, legend = "none")
ggplot(data_middle_age, aes(x = as.factor(gender_code), y = TIV/100000)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
geom_violin(aes(fill = as.factor(gender_code)), trim = FALSE) +
geom_boxplot(width = 0.2)+
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
theme_pubr(base_size = 16, legend = "none")
ggplot(data_middle_age, aes(x = as.factor(gender_code), y = hand)) +
geom_violin(trim = FALSE) +
stat_summary(
fun.data = "mean_sdl",  fun.args = list(mult = 1),
geom = "pointrange", color = "black"
) +
geom_violin(aes(fill = as.factor(gender_code)), trim = FALSE) +
geom_boxplot(width = 0.2)+
scale_fill_manual(values = c("#00AFBB", "#FC4E07")) +
theme_pubr(base_size = 16, legend = "none")
# Section 2.1.2 and Table A.2 of he article
desc_stats <- data_middle_age %>% get_summary_stats() %>% as.data.frame()
summary(lm(Cattell~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Proverb~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Naming~ gender_code * Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(ToT_Ratio_modified~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Hotel_Task_modified~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Sentence_Comprehension_c~ gender_code * Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Story_Recall~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
summary(lm(Verbal_Fluency~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
p.adjust(c('0.8918', '0.8025', '0.00588', '0.2601','0.438997','0.010028','0.020642','0.158'), method = 'fdr')
source("E:/Research_Projects/MiddleAge_LARA/STATS/helper_functions/PRE.R")
PRE(lm(Cattell~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Proverb~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Naming~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(ToT_Ratio_modified~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Hotel_Task_modified~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Sentence_Comprehension_c~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Story_Recall~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
PRE(lm(Verbal_Fluency~ gender_code + Age_Cog + TIV + MMSE + hand, data = data_middle_age)) # No difference in mean age across genders
